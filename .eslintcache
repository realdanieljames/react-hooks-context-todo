[{"/Users/danieljames/CodeImmersives-WebDev/term-2/week-14/react-hooks-context-todo/src/index.js":"1","/Users/danieljames/CodeImmersives-WebDev/term-2/week-14/react-hooks-context-todo/src/App.js":"2","/Users/danieljames/CodeImmersives-WebDev/term-2/week-14/react-hooks-context-todo/src/reportWebVitals.js":"3","/Users/danieljames/CodeImmersives-WebDev/term-2/week-14/react-hooks-context-todo/src/Todo.js":"4","/Users/danieljames/CodeImmersives-WebDev/term-2/week-14/react-hooks-context-todo/src/TodoInput.js":"5","/Users/danieljames/CodeImmersives-WebDev/term-2/week-14/react-hooks-context-todo/src/context/context.js":"6"},{"size":500,"mtime":1607446338192,"results":"7","hashOfConfig":"8"},{"size":2903,"mtime":1607535712180,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1607446338192,"results":"10","hashOfConfig":"8"},{"size":519,"mtime":1607464256529,"results":"11","hashOfConfig":"8"},{"size":564,"mtime":1607462075756,"results":"12","hashOfConfig":"8"},{"size":137,"mtime":1607462663549,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"10yjwbf",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/danieljames/CodeImmersives-WebDev/term-2/week-14/react-hooks-context-todo/src/index.js",[],["29","30"],"/Users/danieljames/CodeImmersives-WebDev/term-2/week-14/react-hooks-context-todo/src/App.js",["31"],"import { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Todo from \"./Todo\";\nimport TodoInput from \"./TodoInput\";\n\nimport {TodoInputContext, TodoContext} from \"./context/context\";\n\nimport \"./App.css\";\n\n\n//==============================================================//\n//==============================================================//\n\nfunction App() {\n  let initialTodoArray = window.localStorage.getItem(\"todos\")\n  ? JSON.parse(window.localStorage.getItem(\"todos\"))\n  : [];\n\n\n  const [todos, setTodos] = useState(initialTodoArray);\n\n  //==============================================================//\n  //==============================================================//\n\n  function addTodo(todo) {\n    const newTodos = [\n      ...todos,\n      {\n        todo: todo,\n        isCompleted: false,\n        id: uuidv4(),\n      },\n    ];\n    setTodos(newTodos);\n  }\n\n  //==============================================================//\n  //==============================================================//\n\n  function removeTodoById(id) {\n    let newTodos = [...todos];\n    newTodos = newTodos.filter((todo) => todo.id !== id);\n\n    setTodos(newTodos);\n  }\n  //==============================================================//\n  //==============================================================//\n\n  function todoDoneByID(id){\n\n\n    let newTodos = [...todos];\n    newTodos.map((todo)=> {\n\n      if(todo.id === id && todo.isCompleted){\n        todo.isCompleted = false;\n        return todo;\n      }\n\n      if(todo.id === id && !todo.isCompleted){\n        todo.isCompleted = true;\n        return todo;\n      }\n\n\n    } );\n\n    setTodos(newTodos)\n  \n  }\n\n\n  //==============================================================//\n  //==============================================================//\n  function showAllTodo() {\n    return todos.map((todoList) => {\n      return (\n        <TodoContext.Provider \n          key={todoList.id}\n          value={{ todoList, removeTodoById, todoDoneByID}}>\n\n        <Todo/>\n          </TodoContext.Provider>\n      );\n    });\n  }\n\n  //==============================================================//\n  //==============================================================//\n\n  function showToDoInput() {\n    return (\n      <TodoInputContext.Provider value={{ addTodo}}>\n      <TodoInput />\n      </TodoInputContext.Provider>\n    )\n  }\n\n  //==============================================================//\n  //==============================================================//\nuseEffect(()=> {\n  window.localStorage.setItem(\"todos\", JSON.stringify(todos))\n  console.log(window)\n}, [todos])\n\n  //==============================================================//\n  //==============================================================//\n\n\n  return (\n    <div className=\"App\">\n      {showToDoInput()}\n      {showAllTodo()}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/danieljames/CodeImmersives-WebDev/term-2/week-14/react-hooks-context-todo/src/reportWebVitals.js",[],"/Users/danieljames/CodeImmersives-WebDev/term-2/week-14/react-hooks-context-todo/src/Todo.js",[],"/Users/danieljames/CodeImmersives-WebDev/term-2/week-14/react-hooks-context-todo/src/TodoInput.js",[],"/Users/danieljames/CodeImmersives-WebDev/term-2/week-14/react-hooks-context-todo/src/context/context.js",[],["32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":53,"column":24,"nodeType":"40","messageId":"41","endLine":53,"endColumn":26},{"ruleId":"34","replacedBy":"42"},{"ruleId":"36","replacedBy":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["44"],["45"],"no-global-assign","no-unsafe-negation"]